use super::evaluate::ScorePair;

// Piece-square tables for both colors, using (middlegame, endgame) score pairs
pub static WHITE_PAWNS: [ScorePair; 64] = [   
    (  0,   0), (  0,   0), (  0,   0), (  0,   0), (  0,   0), (  0,   0), (  0,   0), (  0,   0),
    (-21,   5), (-16, -10), ( -6, -20), ( -1, -25), ( -1, -25), ( -6, -20), (-16, -10), (-21,   5),
    (-21,   5), (-16, -10), ( -6, -20), (  4, -25), (  4, -25), ( -6, -20), (-16, -10), (-21,   5),
    (-21,  10), (-16,  -5), ( -1, -15), (  9, -20), (  9, -20), ( -1, -15), (-16,  -5), (-21,  10),
    (-14,  18), ( -8,   2), (  6,  -8), ( 17, -15), ( 17, -15), (  6,  -8), ( -8,   2), (-14,  18),
    ( -5,  30), (  1,  14), ( 14,   1), ( 29, -10), ( 29, -10), ( 14,   1), (  1,  14), ( -5,  30),
    (  7,  45), ( 11,  30), ( 23,  16), ( 39,   5), ( 39,   5), ( 23,  16), ( 11,  30), (  7,  45),
    (  0,   0), (  0,   0), (  0,   0), (  0,   0), (  0,   0), (  0,   0), (  0,   0), (  0,   0),
];

pub static BLACK_PAWNS: [ScorePair; 64] = [   
    (  0,   0), (  0,   0), (  0,   0), (  0,   0), (  0,   0), (  0,   0), (  0,   0), (  0,   0),
    (  7,  45), ( 11,  30), ( 23,  16), ( 39,   5), ( 39,   5), ( 23,  16), ( 11,  30), (  7,  45),
    ( -5,  30), (  1,  14), ( 14,   1), ( 29, -10), ( 29, -10), ( 14,   1), (  1,  14), ( -5,  30),
    (-14,  18), ( -8,   2), (  6,  -8), ( 17, -15), ( 17, -15), (  6,  -8), ( -8,   2), (-14,  18),
    (-21,  10), (-16,  -5), ( -1, -15), (  9, -20), (  9, -20), ( -1, -15), (-16,  -5), (-21,  10),
    (-21,   5), (-16, -10), ( -6, -20), (  4, -25), (  4, -25), ( -6, -20), (-16, -10), (-21,   5),
    (-21,   5), (-16, -10), ( -6, -20), ( -1, -25), ( -1, -25), ( -6, -20), (-16, -10), (-21,   5),
    (  0,   0), (  0,   0), (  0,   0), (  0,   0), (  0,   0), (  0,   0), (  0,   0), (  0,   0),
];

pub static WHITE_KNIGHTS: [ScorePair; 64] = [   
    (-69, -63), (-19, -53), (-24, -43), (-14, -43), (-14, -43), (-24, -43), (-19, -53), (-69, -63),
    (-54, -53), (-39, -43), ( -9,  18), ( 11,  28), ( 11,  28), ( -9,  18), (-39, -43), (-54, -53),
    (-39, -43), (  1,  18), ( 31,  48), ( 21,  38), ( 21,  38), ( 31,  48), (  1,  18), (-39, -43),
    (-39, -43), ( 11,  38), ( 41,  58), ( 36,  68), ( 36,  68), ( 41,  58), ( 11,  38), (-39, -43),
    (-39, -43), ( 41,  38), ( 51,  73), ( 51,  78), ( 51,  78), ( 51,  73), ( 41,  38), (-39, -43),
    (-39, -43), ( 46,  28), ( 61,  78), ( 71,  73), ( 71,  73), ( 61,  78), ( 46,  28), (-39, -43),
    (-39, -53), ( 21, -43), ( 41,  38), ( 41,  48), ( 41,  48), ( 41,  38), ( 21, -43), (-39, -53),
    (-59, -63), (-39, -53), (-29, -43), (-29, -43), (-29, -43), (-29, -43), (-39, -53), (-59, -63),
];

pub static BLACK_KNIGHTS: [ScorePair; 64] = [
    (-59, -63), (-39, -53), (-29, -43), (-29, -43), (-29, -43), (-29, -43), (-39, -53), (-59, -63),
    (-39, -53), ( 21, -43), ( 41,  38), ( 41,  48), ( 41,  48), ( 41,  38), ( 21, -43), (-39, -53),
    (-39, -43), ( 46,  28), ( 61,  78), ( 71,  73), ( 71,  73), ( 61,  78), ( 46,  28), (-39, -43),
    (-39, -43), ( 41,  38), ( 51,  73), ( 51,  78), ( 51,  78), ( 51,  73), ( 41,  38), (-39, -43),
    (-39, -43), ( 11,  38), ( 41,  58), ( 36,  68), ( 36,  68), ( 41,  58), ( 11,  38), (-39, -43),
    (-39, -43), (  1,  18), ( 31,  48), ( 21,  38), ( 21,  38), ( 31,  48), (  1,  18), (-39, -43),
    (-54, -53), (-39, -43), ( -9,  18), ( 11,  28), ( 11,  28), ( -9,  18), (-39, -43), (-54, -53),
    (-69, -63), (-19, -53), (-24, -43), (-14, -43), (-14, -43), (-24, -43), (-19, -53), (-69, -63),
];

pub static WHITE_BISHOPS: [ScorePair; 64] = [
    (-30, -38), (-25, -18), (-20,  -8), (-20,   2), (-20,   2), (-20,  -8), (-25, -18), (-30, -38),
    (-28, -18), ( 11,  -8), (  6,   2), (  1,   7), (  1,   7), (  6,   2), ( 11,  -8), (-28, -18),
    (-25,  -8), (  6,   2), ( 16,  10), ( 11,  12), ( 11,  12), ( 16,  10), (  6,   2), (-25,  -8),
    (  1,   2), (  1,  12), ( 16,  16), ( 21,  20), ( 21,  20), ( 16,  16), (  1,  12), (  1,   2),
    (  1,   2), ( 21,  12), ( 21,  17), ( 26,  22), ( 26,  22), ( 21,  17), ( 21,  12), (  1,   2),
    (  1,  -8), ( 11,   2), ( 21,  20), ( 26,  22), ( 26,  22), ( 21,  20), ( 11,   2), (  1,  -8),
    (-10, -18), ( 11,  -8), (  1,   0), (  1,  12), (  1,  12), (  1,   0), ( 11,  -8), (-10, -18),
    (-20, -38), (-18, -18), (-16,  -8), (-14,   2), (-14,   2), (-16,  -8), (-18, -18), (-20, -38),
];

pub static BLACK_BISHOPS: [ScorePair; 64] = [
    (-20, -38), (-18, -18), (-16,  -8), (-14,   2), (-14,   2), (-16,  -8), (-18, -18), (-20, -38),
    (-10, -18), ( 11,  -8), (  1,   0), (  1,  12), (  1,  12), (  1,   0), ( 11,  -8), (-10, -18),
    (  1,  -8), ( 11,   2), ( 21,  20), ( 26,  22), ( 26,  22), ( 21,  20), ( 11,   2), (  1,  -8),
    (  1,   2), ( 21,  12), ( 21,  17), ( 26,  22), ( 26,  22), ( 21,  17), ( 21,  12), (  1,   2),
    (  1,   2), (  1,  12), ( 16,  16), ( 21,  20), ( 21,  20), ( 16,  16), (  1,  12), (  1,   2),
    (-25,  -8), (  6,   2), ( 16,  10), ( 11,  12), ( 11,  12), ( 16,  10), (  6,   2), (-25,  -8),
    (-28, -18), ( 11,  -8), (  6,   2), (  1,   7), (  1,   7), (  6,   2), ( 11,  -8), (-28, -18),
    (-30, -38), (-25, -18), (-20,  -8), (-20,   2), (-20,   2), (-20,  -8), (-25, -18), (-30, -38),
];

pub static WHITE_ROOKS: [ScorePair; 64] = [
    ( -8,   0), ( -6,   0), (  2,   0), (  7,   0), (  7,   0), (  2,   0), ( -6,   0), ( -8,   0),
    ( -8,   0), ( -6,   0), (  2,   0), (  7,   0), (  7,   0), (  2,   0), ( -6,   0), ( -8,   0),
    ( -8,   0), ( -6,   0), (  6,   0), (  7,   0), (  7,   0), (  6,   0), ( -6,   0), ( -8,   0),
    ( -8,   0), ( -6,   0), (  6,   0), (  7,   0), (  7,   0), (  6,   0), ( -6,   0), ( -8,   0),
    ( -8,   0), ( -6,   0), (  6,   0), (  8,   0), (  8,   0), (  6,   0), ( -6,   0), ( -8,   0),
    ( -8,   0), ( -6,   0), (  6,   0), ( 10,   0), ( 10,   0), (  6,   0), ( -6,   0), ( -8,   0),
    (  2,   0), (  2,   0), (  7,   0), ( 12,   0), ( 12,   0), (  7,   0), (  2,   0), (  2,   0),
    ( -8,   0), ( -6,   0), (  2,   0), (  7,   0), (  7,   0), (  2,   0), ( -6,   0), ( -8,   0),
];

pub static BLACK_ROOKS: [ScorePair; 64] = [
    ( -8,   0), ( -6,   0), (  2,   0), (  7,   0), (  7,   0), (  2,   0), ( -6,   0), ( -8,   0),
    (  2,   0), (  2,   0), (  7,   0), ( 12,   0), ( 12,   0), (  7,   0), (  2,   0), (  2,   0),
    ( -8,   0), ( -6,   0), (  6,   0), ( 10,   0), ( 10,   0), (  6,   0), ( -6,   0), ( -8,   0),
    ( -8,   0), ( -6,   0), (  6,   0), (  8,   0), (  8,   0), (  6,   0), ( -6,   0), ( -8,   0),
    ( -8,   0), ( -6,   0), (  6,   0), (  7,   0), (  7,   0), (  6,   0), ( -6,   0), ( -8,   0),
    ( -8,   0), ( -6,   0), (  6,   0), (  7,   0), (  7,   0), (  6,   0), ( -6,   0), ( -8,   0),
    ( -8,   0), ( -6,   0), (  2,   0), (  7,   0), (  7,   0), (  2,   0), ( -6,   0), ( -8,   0),
    ( -8,   0), ( -6,   0), (  2,   0), (  7,   0), (  7,   0), (  2,   0), ( -6,   0), ( -8,   0),
];

pub static WHITE_QUEENS: [ScorePair; 64] = [
    (-26, -46), (-16, -41), ( -6, -31), (  4, -26), (  4, -26), ( -6, -31), (-16, -41), (-26, -46),
    (-16, -31), (-11, -26), ( -1, -16), (  4,  -6), (  4,  -6), ( -1, -16), (-11, -26), (-16, -31),
    ( -6, -16), ( -6,  -1), ( -1,  14), (  4,  24), (  4,  24), ( -1,  14), ( -6,  -1), ( -6, -16),
    (  4,  -6), (  4,   9), (  4,  24), (  4,  34), (  4,  34), (  4,  24), (  4,   9), (  4,  -6),
    (  4,  -6), (  4,   9), (  4,  24), (  4,  34), (  4,  34), (  4,  24), (  4,   9), (  4,  -6),
    (  4,  -6), (  4,   9), (  4,  24), (  4,  34), (  4,  34), (  4,  24), (  4,   9), (  4,  -6),
    (  4, -16), (  4,   4), (  4,  19), (  4,  29), (  4,  29), (  4,  19), (  4,   4), (  4, -16),
    (  4, -26), (  4,  -6), (  4,  -1), (  4,   4), (  4,   4), (  4,  -1), (  4,  -6), (  4, -26),
];

pub static BLACK_QUEENS: [ScorePair; 64] = [
    (  4, -26), (  4,  -6), (  4,  -1), (  4,   4), (  4,   4), (  4,  -1), (  4,  -6), (  4, -26),
    (  4, -16), (  4,   4), (  4,  19), (  4,  29), (  4,  29), (  4,  19), (  4,   4), (  4, -16),
    (  4,  -6), (  4,   9), (  4,  24), (  4,  34), (  4,  34), (  4,  24), (  4,   9), (  4,  -6),
    (  4,  -6), (  4,   9), (  4,  24), (  4,  34), (  4,  34), (  4,  24), (  4,   9), (  4,  -6),
    (  4,  -6), (  4,   9), (  4,  24), (  4,  34), (  4,  34), (  4,  24), (  4,   9), (  4,  -6),
    ( -6, -16), ( -6,  -1), ( -1,  14), (  4,  24), (  4,  24), ( -1,  14), ( -6,  -1), ( -6, -16),
    (-16, -31), (-11, -26), ( -1, -16), (  4,  -6), (  4,  -6), ( -1, -16), (-11, -26), (-16, -31),
    (-26, -46), (-16, -41), ( -6, -31), (  4, -26), (  4, -26), ( -6, -31), (-16, -41), (-26, -46),
];

pub static WHITE_KING: [ScorePair; 64] = [
    (-20, -30), (  0, -25), (  0, -15), (-10, -10), (-10, -10), (  0, -15), (  0, -25), (-20, -30),
    (-30, -15), (-30, -10), (-30,   0), (-35,  10), (-35,  10), (-30,   0), (-30, -10), (-30, -15),
    (-40,   0), (-40,  15), (-45,  30), (-50,  40), (-50,  40), (-45,  30), (-40,  15), (-40,   0),
    (-50,  10), (-50,  25), (-55,  40), (-60,  50), (-60,  50), (-55,  40), (-50,  25), (-50,  10),
    (-55,  10), (-55,  25), (-60,  40), (-70,  50), (-70,  50), (-60,  40), (-55,  25), (-55,  10),
    (-55,  10), (-55,  25), (-60,  40), (-70,  50), (-70,  50), (-60,  40), (-55,  25), (-55,  10),
    (-55,   0), (-55,  20), (-60,  35), (-70,  45), (-70,  45), (-60,  35), (-55,  20), (-55,   0),
    (-55, -10), (-55,  10), (-60,  15), (-70,  20), (-70,  20), (-60,  15), (-55,  10), (-55, -10),
];

pub static BLACK_KING: [ScorePair; 64] = [
    (-55, -10), (-55,  10), (-60,  15), (-70,  20), (-70,  20), (-60,  15), (-55,  10), (-55, -10),
    (-55,   0), (-55,  20), (-60,  35), (-70,  45), (-70,  45), (-60,  35), (-55,  20), (-55,   0),
    (-55,  10), (-55,  25), (-60,  40), (-70,  50), (-70,  50), (-60,  40), (-55,  25), (-55,  10),
    (-55,  10), (-55,  25), (-60,  40), (-70,  50), (-70,  50), (-60,  40), (-55,  25), (-55,  10),
    (-50,  10), (-50,  25), (-55,  40), (-60,  50), (-60,  50), (-55,  40), (-50,  25), (-50,  10),
    (-40,   0), (-40,  15), (-45,  30), (-50,  40), (-50,  40), (-45,  30), (-40,  15), (-40,   0),
    (-30, -15), (-30, -10), (-30,   0), (-35,  10), (-35,  10), (-30,   0), (-30, -10), (-30, -15),
    (-20, -30), (  0, -25), (  0, -15), (-10, -10), (-10, -10), (  0, -15), (  0, -25), (-20, -30),
];
