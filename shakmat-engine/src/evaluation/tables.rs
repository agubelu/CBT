use shakmat_core::BitBoard;

pub const FILES: [BitBoard; 8] = [
    BitBoard::new(0x0101010101010101),
    BitBoard::new(0x0202020202020202),
    BitBoard::new(0x0404040404040404),
    BitBoard::new(0x0808080808080808),
    BitBoard::new(0x1010101010101010),
    BitBoard::new(0x2020202020202020),
    BitBoard::new(0x4040404040404040),
    BitBoard::new(0x8080808080808080),
];

pub static WHITE_PASSED_MASK: [BitBoard; 64] = [
    BitBoard::new(0), BitBoard::new(0),
    BitBoard::new(0), BitBoard::new(0),
    BitBoard::new(0), BitBoard::new(0),
    BitBoard::new(0), BitBoard::new(0),
    BitBoard::new(0x0303030303030000),
    BitBoard::new(0x0707070707070000),
    BitBoard::new(0x0E0E0E0E0E0E0000),
    BitBoard::new(0x1C1C1C1C1C1C0000),
    BitBoard::new(0x3838383838380000),
    BitBoard::new(0x7070707070700000),
    BitBoard::new(0xE0E0E0E0E0E00000),
    BitBoard::new(0xC0C0C0C0C0C00000),
    BitBoard::new(0x0303030303000000),
    BitBoard::new(0x0707070707000000),
    BitBoard::new(0x0E0E0E0E0E000000),
    BitBoard::new(0x1C1C1C1C1C000000),
    BitBoard::new(0x3838383838000000),
    BitBoard::new(0x7070707070000000),
    BitBoard::new(0xE0E0E0E0E0000000),
    BitBoard::new(0xC0C0C0C0C0000000),
    BitBoard::new(0x0303030300000000),
    BitBoard::new(0x0707070700000000),
    BitBoard::new(0x0E0E0E0E00000000),
    BitBoard::new(0x1C1C1C1C00000000),
    BitBoard::new(0x3838383800000000),
    BitBoard::new(0x7070707000000000),
    BitBoard::new(0xE0E0E0E000000000),
    BitBoard::new(0xC0C0C0C000000000),
    BitBoard::new(0x0303030000000000),
    BitBoard::new(0x0707070000000000),
    BitBoard::new(0x0E0E0E0000000000),
    BitBoard::new(0x1C1C1C0000000000),
    BitBoard::new(0x3838380000000000),
    BitBoard::new(0x7070700000000000),
    BitBoard::new(0xE0E0E00000000000),
    BitBoard::new(0xC0C0C00000000000),
    BitBoard::new(0x0303000000000000),
    BitBoard::new(0x0707000000000000),
    BitBoard::new(0x0E0E000000000000),
    BitBoard::new(0x1C1C000000000000),
    BitBoard::new(0x3838000000000000),
    BitBoard::new(0x7070000000000000),
    BitBoard::new(0xE0E0000000000000),
    BitBoard::new(0xC0C0000000000000),
    BitBoard::new(0x0300000000000000),
    BitBoard::new(0x0700000000000000),
    BitBoard::new(0x0E00000000000000),
    BitBoard::new(0x1C00000000000000),
    BitBoard::new(0x3800000000000000),
    BitBoard::new(0x7000000000000000),
    BitBoard::new(0xE000000000000000),
    BitBoard::new(0xC000000000000000),
    BitBoard::new(0), BitBoard::new(0),
    BitBoard::new(0), BitBoard::new(0),
    BitBoard::new(0), BitBoard::new(0),
    BitBoard::new(0), BitBoard::new(0),
];

pub static BLACK_PASSED_MASK: [BitBoard; 64] = [
    BitBoard::new(0), BitBoard::new(0),
    BitBoard::new(0), BitBoard::new(0),
    BitBoard::new(0), BitBoard::new(0),
    BitBoard::new(0), BitBoard::new(0),
    BitBoard::new(0x0000000000000003),
    BitBoard::new(0x0000000000000007),
    BitBoard::new(0x000000000000000E),
    BitBoard::new(0x000000000000001C),
    BitBoard::new(0x0000000000000038),
    BitBoard::new(0x0000000000000070),
    BitBoard::new(0x00000000000000E0),
    BitBoard::new(0x00000000000000C0),
    BitBoard::new(0x0000000000000303),
    BitBoard::new(0x0000000000000707),
    BitBoard::new(0x0000000000000E0E),
    BitBoard::new(0x0000000000001C1C),
    BitBoard::new(0x0000000000003838),
    BitBoard::new(0x0000000000007070),
    BitBoard::new(0x000000000000E0E0),
    BitBoard::new(0x000000000000C0C0),
    BitBoard::new(0x0000000000030303),
    BitBoard::new(0x0000000000070707),
    BitBoard::new(0x00000000000E0E0E),
    BitBoard::new(0x00000000001C1C1C),
    BitBoard::new(0x0000000000383838),
    BitBoard::new(0x0000000000707070),
    BitBoard::new(0x0000000000E0E0E0),
    BitBoard::new(0x0000000000C0C0C0),
    BitBoard::new(0x0000000003030303),
    BitBoard::new(0x0000000007070707),
    BitBoard::new(0x000000000E0E0E0E),
    BitBoard::new(0x000000001C1C1C1C),
    BitBoard::new(0x0000000038383838),
    BitBoard::new(0x0000000070707070),
    BitBoard::new(0x00000000E0E0E0E0),
    BitBoard::new(0x00000000C0C0C0C0),
    BitBoard::new(0x0000000303030303),
    BitBoard::new(0x0000000707070707),
    BitBoard::new(0x0000000E0E0E0E0E),
    BitBoard::new(0x0000001C1C1C1C1C),
    BitBoard::new(0x0000003838383838),
    BitBoard::new(0x0000007070707070),
    BitBoard::new(0x000000E0E0E0E0E0),
    BitBoard::new(0x000000C0C0C0C0C0),
    BitBoard::new(0x0000030303030303),
    BitBoard::new(0x0000070707070707),
    BitBoard::new(0x00000E0E0E0E0E0E),
    BitBoard::new(0x00001C1C1C1C1C1C),
    BitBoard::new(0x0000383838383838),
    BitBoard::new(0x0000707070707070),
    BitBoard::new(0x0000E0E0E0E0E0E0),
    BitBoard::new(0x0000C0C0C0C0C0C0),
    BitBoard::new(0), BitBoard::new(0),
    BitBoard::new(0), BitBoard::new(0),
    BitBoard::new(0), BitBoard::new(0),
    BitBoard::new(0), BitBoard::new(0),
];

pub static WHITE_PAWN_OPENING: [i16; 64] = [
      0,   0,  0,  0,  0,  0,  0,    0, 
    -21, -16, -6, -1, -1, -6, -16, -21, 
    -21, -16, -6,  4,  4, -6, -16, -21, 
    -21, -16, -1,  9,  9, -1, -16, -21, 
    -14,  -8,  6, 17, 17,  6,  -8, -14, 
     -5,   1, 14, 29, 29, 14,   1,  -5, 
      7,  11, 23, 39, 39, 23,  11,   7, 
      0,   0,  0,  0,  0,  0,   0,  0
];

pub static BLACK_PAWN_OPENING: [i16; 64] = [
    0, 0, 0, 0, 0, 0, 0, 0,
    7, 11, 23, 39, 39, 23, 11, 7, 
    -5, 1, 14, 29, 29, 14, 1, -5, 
    -14, -8, 6, 17, 17, 6, -8, -14, 
    -21, -16, -1, 9, 9, -1, -16, -21, 
    -21, -16, -6, 4, 4, -6, -16, -21, 
    -21, -16, -6, -1, -1, -6, -16, -21, 
    0, 0, 0, 0, 0, 0, 0, 0
];

pub static WHITE_PAWN_ENDGAME: [i16; 64] = [
    0, 0, 0, 0, 0, 0, 0, 0, 
    5, -10, -20, -25, -25, -20, -10, 5, 
    5, -10, -20, -25, -25, -20, -10, 5, 
    10, -5, -15, -20, -20, -15, -5, 10, 
    18, 2, -8, -15, -15, -8, 2, 18, 
    30, 14, 1, -10, -10, 1, 14, 30, 
    45, 30, 16, 5, 5, 16, 30, 45, 
    0, 0, 0, 0, 0, 0, 0, 0
];

pub static BLACK_PAWN_ENDGAME: [i16; 64] = [
    0, 0, 0, 0, 0, 0, 0, 0,
    45, 30, 16, 5, 5, 16, 30, 45, 
    30, 14, 1, -10, -10, 1, 14, 30, 
    18, 2, -8, -15, -15, -8, 2, 18, 
    10, -5, -15, -20, -20, -15, -5, 10, 
    5, -10, -20, -25, -25, -20, -10, 5, 
    5, -10, -20, -25, -25, -20, -10, 5, 
    0, 0, 0, 0, 0, 0, 0, 0
];

pub static WHITE_KNIGHT_OPENING: [i16; 64] = [
    -69, -19, -24, -14, -14, -24, -19, -69, 
    -54, -39, -9, 11, 11, -9, -39, -54, 
    -39, 1, 31, 21, 21, 31, 1, -39, 
    -39, 11, 41, 36, 36, 41, 11, -39, 
    -39, 41, 51, 51, 51, 51, 41, -39, 
    -39, 46, 61, 71, 71, 61, 46, -39, 
    -39, 21, 41, 41, 41, 41, 21, -39, 
    -59, -39, -29, -29, -29, -29, -39, -59
];

pub static BLACK_KNIGHT_OPENING: [i16; 64] = [
    -59, -39, -29, -29, -29, -29, -39, -59,
    -39, 21, 41, 41, 41, 41, 21, -39, 
    -39, 46, 61, 71, 71, 61, 46, -39, 
    -39, 41, 51, 51, 51, 51, 41, -39, 
    -39, 11, 41, 36, 36, 41, 11, -39, 
    -39, 1, 31, 21, 21, 31, 1, -39, 
    -54, -39, -9, 11, 11, -9, -39, -54, 
    -69, -19, -24, -14, -14, -24, -19, -69, 
];

pub static WHITE_KNIGHT_ENDGAME: [i16; 64] = [
    -63, -53, -43, -43, -43, -43, -53, -63, 
    -53, -43, 18, 28, 28, 18, -43, -53, 
    -43, 18, 48, 38, 38, 48, 18, -43, 
    -43, 38, 58, 68, 68, 58, 38, -43, 
    -43, 38, 73, 78, 78, 73, 38, -43, 
    -43, 28, 78, 73, 73, 78, 28, -43, 
    -53, -43, 38, 48, 48, 38, -43, -53, 
    -63, -53, -43, -43, -43, -43, -53, -63
];

pub static BLACK_KNIGHT_ENDGAME: [i16; 64] = [
    -63, -53, -43, -43, -43, -43, -53, -63,
    -53, -43, 38, 48, 48, 38, -43, -53, 
    -43, 28, 78, 73, 73, 78, 28, -43, 
    -43, 38, 73, 78, 78, 73, 38, -43, 
    -43, 38, 58, 68, 68, 58, 38, -43, 
    -43, 18, 48, 38, 38, 48, 18, -43, 
    -53, -43, 18, 28, 28, 18, -43, -53, 
    -63, -53, -43, -43, -43, -43, -53, -63, 
];

pub static WHITE_BISHOP_OPENING: [i16; 64] = [
    -30, -25, -20, -20, -20, -20, -25, -30, 
    -28, 11, 6, 1, 1, 6, 11, -28, 
    -25, 6, 16, 11, 11, 16, 6, -25, 
    1, 1, 16, 21, 21, 16, 1, 1, 
    1, 21, 21, 26, 26, 21, 21, 1, 
    1, 11, 21, 26, 26, 21, 11, 1, 
    -10, 11, 1, 1, 1, 1, 11, -10, 
    -20, -18, -16, -14, -14, -16, -18, -20
];

pub static BLACK_BISHOP_OPENING: [i16; 64] = [
    -20, -18, -16, -14, -14, -16, -18, -20,
    -10, 11, 1, 1, 1, 1, 11, -10, 
    1, 11, 21, 26, 26, 21, 11, 1, 
    1, 21, 21, 26, 26, 21, 21, 1, 
    1, 1, 16, 21, 21, 16, 1, 1, 
    -25, 6, 16, 11, 11, 16, 6, -25, 
    -28, 11, 6, 1, 1, 6, 11, -28, 
    -30, -25, -20, -20, -20, -20, -25, -30, 
];

pub static WHITE_BISHOP_ENDGAME: [i16; 64] = [
    -38, -18, -8, 2, 2, -8, -18, -38, 
    -18, -8, 2, 7, 7, 2, -8, -18, 
    -8, 2, 10, 12, 12, 10, 2, -8, 
    2, 12, 16, 20, 20, 16, 12, 2, 
    2, 12, 17, 22, 22, 17, 12, 2, 
    -8, 2, 20, 22, 22, 20, 2, -8, 
    -18, -8, 0, 12, 12, 0, -8, -18, 
    -38, -18, -8, 2, 2, -8, -18, -38
];

pub static BLACK_BISHOP_ENDGAME:  [i16; 64] = [
    -38, -18, -8, 2, 2, -8, -18, -38,
    -18, -8, 0, 12, 12, 0, -8, -18, 
    -8, 2, 20, 22, 22, 20, 2, -8, 
    2, 12, 17, 22, 22, 17, 12, 2, 
    2, 12, 16, 20, 20, 16, 12, 2, 
    -8, 2, 10, 12, 12, 10, 2, -8, 
    -18, -8, 2, 7, 7, 2, -8, -18, 
    -38, -18, -8, 2, 2, -8, -18, -38, 
];

pub static WHITE_ROOK_OPENING: [i16; 64] = [
    -8, -6, 2, 7, 7, 2, -6, -8, 
    -8, -6, 2, 7, 7, 2, -6, -8, 
    -8, -6, 6, 7, 7, 6, -6, -8, 
    -8, -6, 6, 7, 7, 6, -6, -8, 
    -8, -6, 6, 8, 8, 6, -6, -8, 
    -8, -6, 6, 10, 10, 6, -6, -8, 
    2, 2, 7, 12, 12, 7, 2, 2, 
    -8, -6, 2, 7, 7, 2, -6, -8
    ];

pub static BLACK_ROOK_OPENING: [i16; 64] = [
    -8, -6, 2, 7, 7, 2, -6, -8,
    2, 2, 7, 12, 12, 7, 2, 2, 
    -8, -6, 6, 10, 10, 6, -6, -8, 
    -8, -6, 6, 8, 8, 6, -6, -8, 
    -8, -6, 6, 7, 7, 6, -6, -8, 
    -8, -6, 6, 7, 7, 6, -6, -8, 
    -8, -6, 2, 7, 7, 2, -6, -8, 
    -8, -6, 2, 7, 7, 2, -6, -8
];

pub static WHITE_QUEEN_OPENING: [i16; 64] = [
    -26, -16, -6, 4, 4, -6, -16, -26, 
    -16, -11, -1, 4, 4, -1, -11, -16, 
    -6, -6, -1, 4, 4, -1, -6, -6, 
    4, 4, 4, 4, 4, 4, 4, 4, 
    4, 4, 4, 4, 4, 4, 4, 4, 
    4, 4, 4, 4, 4, 4, 4, 4, 
    4, 4, 4, 4, 4, 4, 4, 4, 
    4, 4, 4, 4, 4, 4, 4, 4
];

pub static BLACK_QUEEN_OPENING: [i16; 64] = [
    4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 
    4, 4, 4, 4, 4, 4, 4, 4, 
    4, 4, 4, 4, 4, 4, 4, 4, 
    4, 4, 4, 4, 4, 4, 4, 4, 
    -6, -6, -1, 4, 4, -1, -6, -6, 
    -16, -11, -1, 4, 4, -1, -11, -16, 
    -26, -16, -6, 4, 4, -6, -16, -26, 
];

pub static WHITE_QUEEN_ENDGAME: [i16; 64] = [
    -46, -41, -31, -26, -26, -31, -41, -46, 
    -31, -26, -16, -6, -6, -16, -26, -31, 
    -16, -1, 14, 24, 24, 14, -1, -16, 
    -6, 9, 24, 34, 34, 24, 9, -6, 
    -6, 9, 24, 34, 34, 24, 9, -6, 
    -6, 9, 24, 34, 34, 24, 9, -6, 
    -16, 4, 19, 29, 29, 19, 4, -16, 
    -26, -6, -1, 4, 4, -1, -6, -26
];

pub static BLACK_QUEEN_ENDGAME: [i16; 64] = [
    -26, -6, -1, 4, 4, -1, -6, -26,
    -16, 4, 19, 29, 29, 19, 4, -16, 
    -6, 9, 24, 34, 34, 24, 9, -6, 
    -6, 9, 24, 34, 34, 24, 9, -6, 
    -6, 9, 24, 34, 34, 24, 9, -6, 
    -16, -1, 14, 24, 24, 14, -1, -16, 
    -31, -26, -16, -6, -6, -16, -26, -31, 
    -46, -41, -31, -26, -26, -31, -41, -46, 
];

pub static WHITE_KING_OPENING: [i16; 64] = [
    -20, 0, 0, -10, -10, 0, 0, -20, 
    -30, -30, -30, -35, -35, -30, -30, -30, 
    -40, -40, -45, -50, -50, -45, -40, -40, 
    -50, -50, -55, -60, -60, -55, -50, -50, 
    -55, -55, -60, -70, -70, -60, -55, -55, 
    -55, -55, -60, -70, -70, -60, -55, -55, 
    -55, -55, -60, -70, -70, -60, -55, -55, 
    -55, -55, -60, -70, -70, -60, -55, -55
];

pub static BLACK_KING_OPENING: [i16; 64] = [
    -55, -55, -60, -70, -70, -60, -55, -55,
    -55, -55, -60, -70, -70, -60, -55, -55, 
    -55, -55, -60, -70, -70, -60, -55, -55, 
    -55, -55, -60, -70, -70, -60, -55, -55, 
    -50, -50, -55, -60, -60, -55, -50, -50, 
    -40, -40, -45, -50, -50, -45, -40, -40, 
    -30, -30, -30, -35, -35, -30, -30, -30, 
    -20, 0, 0, -10, -10, 0, 0, -20, 
];

pub static WHITE_KING_ENDGAME: [i16; 64] = [
    -30, -25, -15, -10, -10, -15, -25, -30, 
    -15, -10, 0, 10, 10, 0, -10, -15, 
    0, 15, 30, 40, 40, 30, 15, 0, 
    10, 25, 40, 50, 50, 40, 25, 10, 
    10, 25, 40, 50, 50, 40, 25, 10, 
    10, 25, 40, 50, 50, 40, 25, 10, 
    0, 20, 35, 45, 45, 35, 20, 0, 
    -10, 10, 15, 20, 20, 15, 10, -10
    ];

pub static BLACK_KING_ENDGAME: [i16; 64] = [
    -10, 10, 15, 20, 20, 15, 10, -10,
    0, 20, 35, 45, 45, 35, 20, 0, 
    10, 25, 40, 50, 50, 40, 25, 10, 
    10, 25, 40, 50, 50, 40, 25, 10, 
    10, 25, 40, 50, 50, 40, 25, 10, 
    0, 15, 30, 40, 40, 30, 15, 0, 
    -15, -10, 0, 10, 10, 0, -10, -15, 
    -30, -25, -15, -10, -10, -15, -25, -30
];